#include "z80.h"

struct instruction{
	char *disassembly;
	unsigned char operand_length;
	void *exec;
};

const unsigned char instruction_ticks[256];
const struct instruction instructions[256];

void undefined(z80_t * z80);
void nop(z80_t * z80);
void ld_bc_nn(z80_t * z80, uint16_t operand);
void ld_bcp_a(z80_t * z80);
void inc_bc(z80_t * z80);
void inc_b(z80_t * z80);
void dec_b(z80_t * z80);
void ld_b_n(z80_t * z80, unsigned char operand);
void rlca(z80_t * z80);
void ld_nnp_sp(z80_t * z80, uint16_t operand);
void add_hl_bc(z80_t * z80);
void ld_a_bcp(z80_t * z80);
void dec_bc(z80_t * z80);
void inc_c(z80_t * z80);
void dec_c(z80_t * z80);
void ld_c_n(z80_t * z80, unsigned char operand);
void rrca(z80_t * z80);
void stop(z80_t * z80, unsigned char operand);
void ld_de_nn(z80_t * z80, uint16_t operand);
void ld_dep_a(z80_t * z80);
void inc_de(z80_t * z80);
void inc_d(z80_t * z80);
void dec_d(z80_t * z80);
void ld_d_n(z80_t * z80, unsigned char operand);
void rla(z80_t * z80);
void jr_n(z80_t * z80, unsigned char operand);
void add_hl_de(z80_t * z80);
void ld_a_dep(z80_t * z80);
void dec_de(z80_t * z80);
void inc_e(z80_t * z80);
void dec_e(z80_t * z80);
void ld_e_n(z80_t * z80, unsigned char operand);
void rra(z80_t * z80);
void jr_nz_n(z80_t * z80, unsigned char operand);
void ld_hl_nn(z80_t * z80, uint16_t operand);
void ldi_hlp_a(z80_t * z80);
void inc_hl(z80_t * z80);
void inc_h(z80_t * z80);
void dec_h(z80_t * z80);
void ld_h_n(z80_t * z80, unsigned char operand);
void daa(z80_t * z80);
void jr_z_n(z80_t * z80, unsigned char operand);
void add_hl_hl(z80_t * z80);
void ldi_a_hlp(z80_t * z80);
void dec_hl(z80_t * z80);
void inc_l(z80_t * z80);
void dec_l(z80_t * z80);
void ld_l_n(z80_t * z80, unsigned char operand);
void cpl(z80_t * z80);
void jr_nc_n(char operand);
void ld_sp_nn(z80_t * z80, uint16_t operand);
void ldd_hlp_a(z80_t * z80);
void inc_sp(z80_t * z80);
void inc_hlp(z80_t * z80);
void dec_hlp(z80_t * z80);
void ld_hlp_n(z80_t * z80, unsigned char operand);
void scf(z80_t * z80);
void jr_c_n(char operand);
void add_hl_sp(z80_t * z80);
void ldd_a_hlp(z80_t * z80);
void dec_sp(z80_t * z80);
void inc_a(z80_t * z80);
void dec_a(z80_t * z80);
void ld_a_n(z80_t * z80, unsigned char operand);
void ccf(z80_t * z80);
void ld_b_c(z80_t * z80);
void ld_b_d(z80_t * z80);
void ld_b_e(z80_t * z80);
void ld_b_h(z80_t * z80);
void ld_b_l(z80_t * z80);
void ld_b_hlp(z80_t * z80);
void ld_b_a(z80_t * z80);
void ld_c_b(z80_t * z80);
void ld_c_d(z80_t * z80);
void ld_c_e(z80_t * z80);
void ld_c_h(z80_t * z80);
void ld_c_l(z80_t * z80);
void ld_c_hlp(z80_t * z80);
void ld_c_a(z80_t * z80);
void ld_d_b(z80_t * z80);
void ld_d_c(z80_t * z80);
void ld_d_e(z80_t * z80);
void ld_d_h(z80_t * z80);
void ld_d_l(z80_t * z80);
void ld_d_hlp(z80_t * z80);
void ld_d_a(z80_t * z80);
void ld_e_b(z80_t * z80);
void ld_e_c(z80_t * z80);
void ld_e_d(z80_t * z80);
void ld_e_h(z80_t * z80);
void ld_e_l(z80_t * z80);
void ld_e_hlp(z80_t * z80);
void ld_e_a(z80_t * z80);
void ld_h_b(z80_t * z80);
void ld_h_c(z80_t * z80);
void ld_h_d(z80_t * z80);
void ld_h_e(z80_t * z80);
void ld_h_l(z80_t * z80);
void ld_h_hlp(z80_t * z80);
void ld_h_a(z80_t * z80);
void ld_l_b(z80_t * z80);
void ld_l_c(z80_t * z80);
void ld_l_d(z80_t * z80);
void ld_l_e(z80_t * z80);
void ld_l_h(z80_t * z80);
void ld_l_hlp(z80_t * z80);
void ld_l_a(z80_t * z80);
void ld_hlp_b(z80_t * z80);
void ld_hlp_c(z80_t * z80);
void ld_hlp_d(z80_t * z80);
void ld_hlp_e(z80_t * z80);
void ld_hlp_h(z80_t * z80);
void ld_hlp_l(z80_t * z80);
void halt(z80_t * z80);
void ld_hlp_a(z80_t * z80);
void ld_a_b(z80_t * z80);
void ld_a_c(z80_t * z80);
void ld_a_d(z80_t * z80);
void ld_a_e(z80_t * z80);
void ld_a_h(z80_t * z80);
void ld_a_l(z80_t * z80);
void ld_a_hlp(z80_t * z80);
void add_a_b(z80_t * z80);
void add_a_c(z80_t * z80);
void add_a_d(z80_t * z80);
void add_a_e(z80_t * z80);
void add_a_h(z80_t * z80);
void add_a_l(z80_t * z80);
void add_a_hlp(z80_t * z80);
void add_a_a(z80_t * z80);
void adc_b(z80_t * z80);
void adc_c(z80_t * z80);
void adc_d(z80_t * z80);
void adc_e(z80_t * z80);
void adc_h(z80_t * z80);
void adc_l(z80_t * z80);
void adc_hlp(z80_t * z80);
void adc_a(z80_t * z80);
void sub_b(z80_t * z80);
void sub_c(z80_t * z80);
void sub_d(z80_t * z80);
void sub_e(z80_t * z80);
void sub_h(z80_t * z80);
void sub_l(z80_t * z80);
void sub_hlp(z80_t * z80);
void sub_a(z80_t * z80);
void sbc_b(z80_t * z80);
void sbc_c(z80_t * z80);
void sbc_d(z80_t * z80);
void sbc_e(z80_t * z80);
void sbc_h(z80_t * z80);
void sbc_l(z80_t * z80);
void sbc_hlp(z80_t * z80);
void sbc_a(z80_t * z80);
void and_b(z80_t * z80);
void and_c(z80_t * z80);
void and_d(z80_t * z80);
void and_e(z80_t * z80);
void and_h(z80_t * z80);
void and_l(z80_t * z80);
void and_hlp(z80_t * z80);
void and_a(z80_t * z80);
void xor_b(z80_t * z80);
void xor_c(z80_t * z80);
void xor_d(z80_t * z80);
void xor_e(z80_t * z80);
void xor_h(z80_t * z80);
void xor_l(z80_t * z80);
void xor_hlp(z80_t * z80);
void xor_a(z80_t * z80);
void or_b(z80_t * z80);
void or_c(z80_t * z80);
void or_d(z80_t * z80);
void or_e(z80_t * z80);
void or_h(z80_t * z80);
void or_l(z80_t * z80);
void or_hlp(z80_t * z80);
void or_a(z80_t * z80);
void cp_b(z80_t * z80);
void cp_c(z80_t * z80);
void cp_d(z80_t * z80);
void cp_e(z80_t * z80);
void cp_h(z80_t * z80);
void cp_l(z80_t * z80);
void cp_hlp(z80_t * z80);
void cp_a(z80_t * z80);
void ret_nz(z80_t * z80);
void pop_bc(z80_t * z80);
void jp_nz_nn(z80_t * z80, uint16_t operand);
void jp_nn(z80_t * z80, uint16_t operand);
void call_nz_nn(z80_t * z80, uint16_t operand);
void push_bc(z80_t * z80);
void add_a_n(z80_t * z80, unsigned char operand);
void rst_0(z80_t * z80);
void ret_z(z80_t * z80);
void ret(z80_t * z80);
void jp_z_nn(z80_t * z80, uint16_t operand);
void call_z_nn(z80_t * z80, uint16_t operand);
void call_nn(z80_t * z80, uint16_t operand);
void adc_n(z80_t * z80, unsigned char operand);
void rst_08(z80_t * z80);
void ret_nc(z80_t * z80);
void pop_de(z80_t * z80);
void jp_nc_nn(z80_t * z80, uint16_t operand);
void call_nc_nn(z80_t * z80, uint16_t operand);
void push_de(z80_t * z80);
void sub_n(z80_t * z80, unsigned char operand);
void rst_10(z80_t * z80);
void ret_c(z80_t * z80);
void jp_c_nn(z80_t * z80, uint16_t operand);
void call_c_nn(z80_t * z80, uint16_t operand);
void sbc_n(z80_t * z80, unsigned char operand);
void rst_18(z80_t * z80);
void ld_ff_n_ap(z80_t * z80, unsigned char operand);
void pop_hl(z80_t * z80);
void ld_ff_c_a(z80_t * z80);
void push_hl(z80_t * z80);
void and_n(z80_t * z80, unsigned char operand);
void rst_20(z80_t * z80);
void add_sp_n(char operand);
void jp_hl(z80_t * z80);
void ld_nnp_a(z80_t * z80, uint16_t operand);
void xor_n(z80_t * z80, unsigned char operand);
void rst_28(z80_t * z80);
void ld_ff_ap_n(z80_t * z80, unsigned char operand);
void pop_af(z80_t * z80);
void ld_a_ff_c(z80_t * z80);
void di_inst(z80_t * z80);
void push_af(z80_t * z80);
void or_n(z80_t * z80, unsigned char operand);
void rst_30(z80_t * z80);
void ld_hl_sp_n(z80_t * z80, unsigned char operand);
void ld_sp_hl(z80_t * z80);
void ld_a_nnp(z80_t * z80, uint16_t operand);
void ei(z80_t * z80);
void cp_n(z80_t * z80, unsigned char operand);
void rst_38(z80_t * z80);

